{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/components/PreviewList.js","../src/components/SnackbarContentWrapper.js","../src/components/DropzoneAreaBase.js","../src/components/DropzoneArea.js","../src/components/DropzoneDialogBase.js","../src/components/DropzoneDialog.js"],"sourcesContent":["export function isImage(file) {\n    if (file.type.split('/')[0] === 'image') {\n        return true;\n    }\n}\n\nexport function convertBytesToMbsOrKbs(filesize) {\n    let size = '';\n    if (filesize >= 1048576) {\n        size = (filesize / 1048576) + ' megabytes';\n    } else if (filesize >= 1024) {\n        size = (filesize / 1024) + ' kilobytes';\n    } else {\n        size = filesize + ' bytes';\n    }\n    return size;\n}\n\nexport async function createFileFromUrl(url) {\n    const response = await fetch(url);\n    const data = await response.blob();\n    const metadata = {type: data.type};\n    const filename = url.replace(/\\?.+/, '').split('/').pop();\n    return new File([data], filename, metadata);\n}\n\nexport function readFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            resolve(event?.target?.result);\n        };\n        reader.onerror = (event) => {\n            reader.abort();\n            reject(event);\n        };\n        reader.readAsDataURL(file);\n    });\n}\n","import * as React from 'react';\n\nimport Chip from '@mui/material/Chip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Fab from '@mui/material/Fab';\nimport Grid from '@mui/material/Grid';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport clsx from 'clsx';\nimport { withStyles } from '@mui/material/styles';\n\nconst styles = ({ palette, shape, spacing }) => ({\n  root: {},\n  imageContainer: {\n    position: 'relative',\n    zIndex: 10,\n    textAlign: 'center',\n    '&:hover $image': {\n      opacity: 0.3,\n    },\n    '&:hover $removeButton': {\n      opacity: 1,\n    },\n  },\n  image: {\n    height: 100,\n    width: 'initial',\n    maxWidth: '100%',\n    color: palette.text.primary,\n    transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\n    boxSizing: 'border-box',\n    boxShadow: 'rgba(0, 0, 0, 0.12) 0 1px 6px, rgba(0, 0, 0, 0.12) 0 1px 4px',\n    borderRadius: shape.borderRadius,\n    zIndex: 5,\n    opacity: 1,\n  },\n  removeButton: {\n    transition: '.5s ease',\n    position: 'absolute',\n    opacity: 0,\n    top: spacing(-1),\n    right: spacing(-1),\n    width: 40,\n    height: 40,\n    '&:focus': {\n      opacity: 1,\n    },\n  },\n});\n\nfunction PreviewList({\n  fileObjects,\n  handleRemove,\n  showFileNames,\n  useChipsForPreview,\n  previewChipProps,\n  previewGridClasses,\n  previewGridProps,\n  classes,\n  getPreviewIcon,\n}) {\n  if (useChipsForPreview) {\n    return (\n      <Grid spacing={1} direction='row' {...previewGridProps.container} container={true} className={clsx(classes.root, previewGridClasses.container)}>\n        {fileObjects.map((fileObject, i) => {\n          return (\n            <Grid {...previewGridProps.item} item={true} key={`${fileObject.file?.name ?? 'file'}-${i}`} className={classes.imageContainer}>\n              <Chip variant='outlined' {...previewChipProps} label={fileObject.file.name} onDelete={handleRemove(i)} />\n            </Grid>\n          );\n        })}\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid spacing={8} {...previewGridProps.container} container={true} className={clsx(classes.root, previewGridClasses.container)}>\n      {fileObjects.map((fileObject, i) => {\n        return (\n          <Grid\n            xs={4}\n            {...previewGridProps.item}\n            item={true}\n            key={`${fileObject.file?.name ?? 'file'}-${i}`}\n            className={clsx(classes.imageContainer, previewGridClasses.item)}\n          >\n            {getPreviewIcon(fileObject, classes)}\n\n            {showFileNames && (\n              <Typography variant='body1' component='p'>\n                {fileObject.file.name}\n              </Typography>\n            )}\n\n            <Fab onClick={handleRemove(i)} aria-label='Delete' className={classes.removeButton}>\n              <DeleteIcon />\n            </Fab>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n\nPreviewList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getPreviewIcon: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  previewChipProps: PropTypes.object,\n  previewGridClasses: PropTypes.object,\n  previewGridProps: PropTypes.object,\n  showFileNames: PropTypes.bool,\n  useChipsForPreview: PropTypes.bool,\n};\n\nexport default withStyles(styles, { name: 'MuiDropzonePreviewList' })(PreviewList);\n","import * as React from 'react';\n\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport IconButton from '@mui/material/IconButton';\nimport InfoIcon from '@mui/icons-material/Info';\nimport PropTypes from 'prop-types';\nimport SnackbarContent from '@mui/material/SnackbarContent';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport clsx from 'clsx';\nimport { withStyles } from '@mui/material/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles = (theme) => ({\n  successAlert: {\n    backgroundColor: theme.palette.success.main,\n  },\n  errorAlert: {\n    backgroundColor: theme.palette.error.main,\n  },\n  infoAlert: {\n    backgroundColor: theme.palette.info.main,\n  },\n  warningAlert: {\n    backgroundColor: theme.palette.warning.main,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n    '& > svg': {\n      marginRight: theme.spacing(1),\n    },\n  },\n  icon: {\n    fontSize: 20,\n    opacity: 0.9,\n  },\n  closeButton: {},\n});\n\nfunction SnackbarContentWrapper(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[`${variant}Alert`], className)}\n      aria-describedby='client-snackbar'\n      message={\n        <span id='client-snackbar' className={classes.message}>\n          <Icon className={classes.icon} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key='close' aria-label='Close' color='inherit' className={classes.closeButton} onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nSnackbarContentWrapper.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default withStyles(styles, { name: 'MuiDropzoneSnackbar' })(SnackbarContentWrapper);\n","import * as React from 'react';\n\nimport { convertBytesToMbsOrKbs, isImage, readFile } from '../helpers';\n\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport Dropzone from 'react-dropzone';\nimport { Fragment } from 'react';\nimport PreviewList from './PreviewList';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@mui/material/Snackbar';\nimport SnackbarContentWrapper from './SnackbarContentWrapper';\nimport Typography from '@mui/material/Typography';\nimport clsx from 'clsx';\nimport { withStyles } from '@mui/material/styles';\n\nconst styles = ({ palette, shape, spacing }) => ({\n  '@keyframes progress': {\n    '0%': {\n      backgroundPosition: '0 0',\n    },\n    '100%': {\n      backgroundPosition: '-70px 0',\n    },\n  },\n  root: {\n    position: 'relative',\n    width: '100%',\n    minHeight: '250px',\n    backgroundColor: palette.background.paper,\n    border: 'dashed',\n    borderColor: palette.divider,\n    borderRadius: shape.borderRadius,\n    boxSizing: 'border-box',\n    cursor: 'pointer',\n    overflow: 'hidden',\n  },\n  active: {\n    animation: '$progress 2s linear infinite !important',\n    // eslint-disable-next-line max-len\n    backgroundImage: `repeating-linear-gradient(-45deg, ${palette.background.paper}, ${palette.background.paper} 25px, ${palette.divider} 25px, ${palette.divider} 50px)`,\n    backgroundSize: '150% 100%',\n    border: 'solid',\n    borderColor: palette.primary.light,\n  },\n  invalid: {\n    // eslint-disable-next-line max-len\n    backgroundImage: `repeating-linear-gradient(-45deg, ${palette.error.light}, ${palette.error.light} 25px, ${palette.error.dark} 25px, ${palette.error.dark} 50px)`,\n    borderColor: palette.error.main,\n  },\n  textContainer: {\n    textAlign: 'center',\n  },\n  text: {\n    marginBottom: spacing(3),\n    marginTop: spacing(3),\n  },\n  icon: {\n    width: 51,\n    height: 51,\n    color: palette.text.primary,\n  },\n});\n\nconst defaultSnackbarAnchorOrigin = {\n  horizontal: 'left',\n  vertical: 'bottom',\n};\n\nconst defaultGetPreviewIcon = (fileObject, classes) => {\n  if (isImage(fileObject.file)) {\n    return <img className={classes.image} role='presentation' src={fileObject.data} />;\n  }\n\n  return <AttachFileIcon className={classes.image} />;\n};\n\n/**\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\n */\nclass DropzoneAreaBase extends React.PureComponent {\n  state = {\n    openSnackBar: false,\n    snackbarMessage: '',\n    snackbarVariant: 'success',\n  };\n\n  notifyAlert() {\n    const { onAlert } = this.props;\n    const { openSnackBar, snackbarMessage, snackbarVariant } = this.state;\n    if (openSnackBar && onAlert) {\n      onAlert(snackbarMessage, snackbarVariant);\n    }\n  }\n\n  handleDropAccepted = async (acceptedFiles, evt) => {\n    const { fileObjects, filesLimit, getFileAddedMessage, getFileLimitExceedMessage, onAdd, onDrop } = this.props;\n\n    if (filesLimit > 1 && fileObjects.length + acceptedFiles.length > filesLimit) {\n      this.setState(\n        {\n          openSnackBar: true,\n          snackbarMessage: getFileLimitExceedMessage(filesLimit),\n          snackbarVariant: 'error',\n        },\n        this.notifyAlert\n      );\n      return;\n    }\n\n    // Notify Drop event\n    if (onDrop) {\n      onDrop(acceptedFiles, evt);\n    }\n\n    // Retrieve fileObjects data\n    const fileObjs = await Promise.all(\n      acceptedFiles.map(async (file) => {\n        const data = await readFile(file);\n        return {\n          file,\n          data,\n        };\n      })\n    );\n\n    // Notify added files\n    if (onAdd) {\n      onAdd(fileObjs);\n    }\n\n    // Display message\n    const message = fileObjs.reduce((msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name), '');\n    this.setState(\n      {\n        openSnackBar: true,\n        snackbarMessage: message,\n        snackbarVariant: 'success',\n      },\n      this.notifyAlert\n    );\n  };\n\n  handleDropRejected = (rejectedFiles, evt) => {\n    const { acceptedFiles, filesLimit, fileObjects, getDropRejectMessage, getFileLimitExceedMessage, maxFileSize, onDropRejected } = this.props;\n\n    let message = '';\n    if (fileObjects.length + rejectedFiles.length > filesLimit) {\n      message = getFileLimitExceedMessage(filesLimit);\n    } else {\n      rejectedFiles.forEach((rejectedFile) => {\n        message = getDropRejectMessage(rejectedFile, acceptedFiles, maxFileSize);\n      });\n    }\n\n    if (onDropRejected) {\n      onDropRejected(rejectedFiles, evt);\n    }\n\n    this.setState(\n      {\n        openSnackBar: true,\n        snackbarMessage: message,\n        snackbarVariant: 'error',\n      },\n      this.notifyAlert\n    );\n  };\n\n  handleRemove = (fileIndex) => (event) => {\n    event.stopPropagation();\n\n    const { fileObjects, getFileRemovedMessage, onDelete } = this.props;\n\n    // Find removed fileObject\n    const removedFileObj = fileObjects[fileIndex];\n\n    // Notify removed file\n    if (onDelete) {\n      onDelete(removedFileObj, fileIndex);\n    }\n\n    this.setState(\n      {\n        openSnackBar: true,\n        snackbarMessage: getFileRemovedMessage(removedFileObj.file.name),\n        snackbarVariant: 'info',\n      },\n      this.notifyAlert\n    );\n  };\n\n  handleCloseSnackbar = () => {\n    this.setState({\n      openSnackBar: false,\n    });\n  };\n\n  render() {\n    const {\n      acceptedFiles,\n      alertSnackbarProps,\n      classes,\n      disableRejectionFeedback,\n      dropzoneClass,\n      dropzoneParagraphClass,\n      dropzoneProps,\n      dropzoneText,\n      fileObjects,\n      filesLimit,\n      getPreviewIcon,\n      Icon,\n      inputProps,\n      maxFileSize,\n      previewChipProps,\n      previewGridClasses,\n      previewGridProps,\n      previewText,\n      showAlerts,\n      showFileNames,\n      showFileNamesInPreview,\n      showPreviews,\n      showPreviewsInDropzone,\n      useChipsForPreview,\n    } = this.props;\n    const { openSnackBar, snackbarMessage, snackbarVariant } = this.state;\n\n    const acceptFiles = acceptedFiles?.join(',');\n    const isMultiple = filesLimit > 1;\n    const previewsVisible = showPreviews && fileObjects.length > 0;\n    const previewsInDropzoneVisible = showPreviewsInDropzone && fileObjects.length > 0;\n\n    return (\n      <Fragment>\n        <Dropzone\n          {...dropzoneProps}\n          accept={acceptFiles}\n          onDropAccepted={this.handleDropAccepted}\n          onDropRejected={this.handleDropRejected}\n          maxSize={maxFileSize}\n          multiple={isMultiple}\n        >\n          {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n            <div\n              {...getRootProps({\n                className: clsx(classes.root, dropzoneClass, isDragActive && classes.active, !disableRejectionFeedback && isDragReject && classes.invalid),\n              })}\n            >\n              <input {...getInputProps(inputProps)} />\n\n              <div className={classes.textContainer}>\n                <Typography variant='h5' component='p' className={clsx(classes.text, dropzoneParagraphClass)}>\n                  {dropzoneText}\n                </Typography>\n                {Icon ? <Icon className={classes.icon} /> : <CloudUploadIcon className={classes.icon} />}\n              </div>\n\n              {previewsInDropzoneVisible && (\n                <PreviewList\n                  fileObjects={fileObjects}\n                  handleRemove={this.handleRemove}\n                  getPreviewIcon={getPreviewIcon}\n                  showFileNames={showFileNames}\n                  useChipsForPreview={useChipsForPreview}\n                  previewChipProps={previewChipProps}\n                  previewGridClasses={previewGridClasses}\n                  previewGridProps={previewGridProps}\n                />\n              )}\n            </div>\n          )}\n        </Dropzone>\n\n        {previewsVisible && (\n          <Fragment>\n            <Typography variant='subtitle1' component='span'>\n              {previewText}\n            </Typography>\n\n            <PreviewList\n              fileObjects={fileObjects}\n              handleRemove={this.handleRemove}\n              getPreviewIcon={getPreviewIcon}\n              showFileNames={showFileNamesInPreview}\n              useChipsForPreview={useChipsForPreview}\n              previewChipProps={previewChipProps}\n              previewGridClasses={previewGridClasses}\n              previewGridProps={previewGridProps}\n            />\n          </Fragment>\n        )}\n\n        {((typeof showAlerts === 'boolean' && showAlerts) || (Array.isArray(showAlerts) && showAlerts.includes(snackbarVariant))) && (\n          <Snackbar\n            anchorOrigin={defaultSnackbarAnchorOrigin}\n            autoHideDuration={6000}\n            {...alertSnackbarProps}\n            open={openSnackBar}\n            onClose={this.handleCloseSnackbar}\n          >\n            <SnackbarContentWrapper onClose={this.handleCloseSnackbar} variant={snackbarVariant} message={snackbarMessage} />\n          </Snackbar>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nDropzoneAreaBase.defaultProps = {\n  acceptedFiles: [],\n  filesLimit: 3,\n  fileObjects: [],\n  maxFileSize: 3000000,\n  dropzoneText: 'Drag and drop a file here or click',\n  previewText: 'Preview:',\n  disableRejectionFeedback: false,\n  showPreviews: false, // By default previews show up under in the dialog and inside in the standalone\n  showPreviewsInDropzone: true,\n  showFileNames: false,\n  showFileNamesInPreview: false,\n  useChipsForPreview: false,\n  previewChipProps: {},\n  previewGridClasses: {},\n  previewGridProps: {},\n  showAlerts: true,\n  alertSnackbarProps: {\n    anchorOrigin: {\n      horizontal: 'left',\n      vertical: 'bottom',\n    },\n    autoHideDuration: 6000,\n  },\n  getFileLimitExceedMessage: (filesLimit) => `Maximum allowed number of files exceeded. Only ${filesLimit} allowed`,\n  getFileAddedMessage: (fileName) => `File ${fileName} successfully added.`,\n  getPreviewIcon: defaultGetPreviewIcon,\n  getFileRemovedMessage: (fileName) => `File ${fileName} removed.`,\n  getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\n    let message = `File ${rejectedFile.name} was rejected. `;\n    if (!acceptedFiles.includes(rejectedFile.type)) {\n      message += 'File type not supported. ';\n    }\n    if (rejectedFile.size > maxFileSize) {\n      message += 'File is too big. Size limit is ' + convertBytesToMbsOrKbs(maxFileSize) + '. ';\n    }\n    return message;\n  },\n};\n\nexport const FileObjectShape = PropTypes.shape({\n  file: PropTypes.object,\n  data: PropTypes.any,\n});\n\nDropzoneAreaBase.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** A list of file types to accept.\n   * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\n   */\n  acceptedFiles: PropTypes.arrayOf(PropTypes.string),\n  /** Maximum number of files that can be loaded into the dropzone. */\n  filesLimit: PropTypes.number,\n  /** Icon to be displayed inside the dropzone area. */\n  Icon: PropTypes.elementType,\n  /** Currently loaded files. */\n  fileObjects: PropTypes.arrayOf(FileObjectShape),\n  /** Maximum file size (in bytes) that the dropzone will accept. */\n  maxFileSize: PropTypes.number,\n  /** Text inside the dropzone. */\n  dropzoneText: PropTypes.string,\n  /** Custom CSS class name for dropzone container. */\n  dropzoneClass: PropTypes.string,\n  /** Custom CSS class name for text inside the container. */\n  dropzoneParagraphClass: PropTypes.string,\n  /** Disable feedback effect when dropping rejected files. */\n  disableRejectionFeedback: PropTypes.bool,\n  /** Shows previews **BELOW** the dropzone. */\n  showPreviews: PropTypes.bool,\n  /** Shows preview **INSIDE** the dropzone area. */\n  showPreviewsInDropzone: PropTypes.bool,\n  /** Shows file name under the dropzone image. */\n  showFileNames: PropTypes.bool,\n  /** Shows file name under the image. */\n  showFileNamesInPreview: PropTypes.bool,\n  /** Uses deletable Material-UI Chip components to display file names. */\n  useChipsForPreview: PropTypes.bool,\n  /**\n   * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\n   *\n   * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\n   */\n  previewChipProps: PropTypes.object,\n  /**\n   * Custom CSS classNames for preview Grid components.<br/>\n   * Should be in the form {container: string, item: string, image: string}.\n   */\n  previewGridClasses: PropTypes.object,\n  /**\n   * Props to pass to the Material-UI Grid components.<br/>\n   * Should be in the form {container: GridProps, item: GridProps}.\n   *\n   * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\n   */\n  previewGridProps: PropTypes.object,\n  /** The label for the file preview section. */\n  previewText: PropTypes.string,\n  /**\n   * Shows styled Material-UI Snackbar when files are dropped, deleted or rejected.\n   *\n   * - can be a boolean (\"global\" `true` or `false` for all alerts).\n   * - can be an array, with values 'error', 'info', 'success' to select to view only certain alerts:\n   *  - showAlerts={['error']} for only errors.\n   *  - showAlerts={['error', 'info']} for both errors and info.\n   *  - showAlerts={['error', 'success', 'info']} is same as showAlerts={true}.\n   *  - showAlerts={[]} is same as showAlerts={false}.\n   */\n  showAlerts: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.oneOf(['error', 'success', 'info']))]),\n  /**\n   * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\n   *\n   * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\n   */\n  alertSnackbarProps: PropTypes.object,\n  /**\n   * Props to pass to the Dropzone component.\n   *\n   * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\n   */\n  dropzoneProps: PropTypes.object,\n  /**\n   * Attributes applied to the input element.\n   *\n   * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Get alert message to display when files limit is exceed.\n   *\n   * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\n   *\n   * @param {number} filesLimit The `filesLimit` currently set for the component.\n   */\n  getFileLimitExceedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a new file is added.\n   *\n   * *Default*: \"File ${fileName} successfully added.\"\n   *\n   * @param {string} fileName The newly added file name.\n   */\n  getFileAddedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a file is removed.\n   *\n   * *Default*: \"File ${fileName} removed.\"\n   *\n   * @param {string} fileName The name of the removed file.\n   */\n  getFileRemovedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a file is rejected onDrop.\n   *\n   * *Default*: \"File ${rejectedFile.name} was rejected.\"\n   *\n   * @param {Object} rejectedFile The file that got rejected\n   * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\n   * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\n   */\n  getDropRejectMessage: PropTypes.func,\n  /**\n   * A function which determines which icon to display for a file preview.\n   *\n   * *Default*: If its an image then displays a preview the image, otherwise it will display an attachment icon\n   *\n   * @param {FileObject} objectFile The file which the preview will belong to\n   * @param {Object} classes The classes for the file preview icon, in the default case we use the 'image' className.\n   */\n  getPreviewIcon: PropTypes.func,\n  /**\n   * Fired when new files are added to dropzone.\n   *\n   * @param {FileObject[]} newFiles The new files added to the dropzone.\n   */\n  onAdd: PropTypes.func,\n  /**\n   * Fired when a file is deleted from the previews panel.\n   *\n   * @param {FileObject} deletedFileObject The file that was removed.\n   * @param {number} index The index of the removed file object.\n   */\n  onDelete: PropTypes.func,\n  /**\n   * Fired when the user drops files into the dropzone.\n   *\n   * @param {File[]} droppedFiles All the files dropped into the dropzone.\n   * @param {Event} event The react-dropzone drop event.\n   */\n  onDrop: PropTypes.func,\n  /**\n   * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\n   *\n   * @param {File[]} rejectedFiles All the rejected files.\n   * @param {Event} event The react-dropzone drop event.\n   */\n  onDropRejected: PropTypes.func,\n  /**\n   * Fired when an alert is triggered.\n   *\n   * @param {string} message Alert message.\n   * @param {string} variant One of \"error\", \"info\", \"success\".\n   */\n  onAlert: PropTypes.func,\n};\n\nexport default withStyles(styles, { name: 'MuiDropzoneArea' })(DropzoneAreaBase);\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {createFileFromUrl, readFile} from '../helpers';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\nconst splitDropzoneAreaProps = (props) => {\n    const {clearOnUnmount, initialFiles, onChange, onDelete, ...dropzoneAreaProps} = props;\n    return [{clearOnUnmount, initialFiles, onChange, onDelete}, dropzoneAreaProps];\n};\n\n/**\n * This components creates an uncontrolled Material-UI Dropzone, with previews and snackbar notifications.\n *\n * It supports all props of `DropzoneAreaBase` but keeps the files state internally.\n *\n * **Note** To listen to file changes use `onChange` event handler and notice that `onDelete` returns a `File` instance instead of `FileObject`.\n */\nclass DropzoneArea extends React.PureComponent {\n    state = {\n        fileObjects: [],\n    }\n\n    componentDidMount() {\n        this.loadInitialFiles();\n    }\n\n    componentWillUnmount() {\n        const {clearOnUnmount} = this.props;\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    notifyFileChange = () => {\n        const {onChange} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file));\n        }\n    }\n\n    loadInitialFiles = async() => {\n        const {initialFiles} = this.props;\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            this.setState((state) => ({\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    fileObjs\n                ),\n            }), this.notifyFileChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    addFiles = async(newFileObjects) => {\n        const {filesLimit} = this.props;\n        // Update component state\n        this.setState((state) => {\n            // Handle a single file\n            if (filesLimit <= 1) {\n                return {\n                    fileObjects: [].concat(newFileObjects[0]),\n                };\n            }\n\n            // Handle multiple files\n            return {\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    newFileObjects\n                ),\n            };\n        }, this.notifyFileChange);\n    }\n\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        const {onDelete} = this.props;\n        const {fileObjects} = this.state;\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file);\n        }\n\n        // Update local state\n        this.setState({\n            fileObjects: remainingFileObjs,\n        }, this.notifyFileChange);\n    }\n\n    render() {\n        const [, dropzoneAreaProps] = splitDropzoneAreaProps(this.props);\n        const {fileObjects} = this.state;\n\n        return (\n            <DropzoneAreaBase\n                {...dropzoneAreaProps}\n                fileObjects={fileObjects}\n                onAdd={this.addFiles}\n                onDelete={this.deleteFile}\n            />\n        );\n    }\n}\n\nDropzoneArea.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneArea.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /**\n     * Fired when the files inside dropzone change.\n     *\n     * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Fired when a file is deleted from the previews panel.\n     *\n     * @param {File} deletedFile The file that was removed.\n     */\n    onDelete: PropTypes.func,\n};\n\nexport default DropzoneArea;\n","import * as React from 'react';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DropzoneAreaBase from './DropzoneAreaBase';\nimport PropTypes from 'prop-types';\n\n// Split props related to DropzoneDialog from DropzoneArea ones\nfunction splitDropzoneDialogProps(allProps) {\n  const { cancelButtonText, dialogProps, dialogTitle, fullWidth, maxWidth, onClose, onSave, open, submitButtonText, ...dropzoneAreaProps } = allProps;\n\n  return [\n    {\n      cancelButtonText,\n      dialogProps,\n      dialogTitle,\n      fullWidth,\n      maxWidth,\n      onClose,\n      onSave,\n      open,\n      submitButtonText,\n    },\n    dropzoneAreaProps,\n  ];\n}\n\n/**\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\n *\n * It supports all the Props and Methods from `DropzoneAreaBase`.\n */\nclass DropzoneDialogBase extends React.PureComponent {\n  render() {\n    const [dropzoneDialogProps, dropzoneAreaProps] = splitDropzoneDialogProps(this.props);\n    const { cancelButtonText, dialogProps, dialogTitle, fullWidth, maxWidth, onClose, onSave, open, submitButtonText } = dropzoneDialogProps;\n\n    // Submit button state\n    const submitDisabled = dropzoneAreaProps.fileObjects.length === 0;\n\n    return (\n      <Dialog {...dialogProps} fullWidth={fullWidth} maxWidth={maxWidth} onClose={onClose} open={open}>\n        <DialogTitle>{dialogTitle}</DialogTitle>\n\n        <DialogContent>\n          <DropzoneAreaBase {...dropzoneAreaProps} />\n        </DialogContent>\n\n        <DialogActions>\n          <Button color='primary' onClick={onClose}>\n            {cancelButtonText}\n          </Button>\n\n          <Button color='primary' disabled={submitDisabled} onClick={onSave}>\n            {submitButtonText}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nDropzoneDialogBase.defaultProps = {\n  open: false,\n  dialogTitle: 'Upload file',\n  dialogProps: {},\n  fullWidth: true,\n  maxWidth: 'sm',\n  cancelButtonText: 'Cancel',\n  submitButtonText: 'Submit',\n  showPreviews: true,\n  showPreviewsInDropzone: false,\n  showFileNamesInPreview: true,\n};\n\nDropzoneDialogBase.propTypes = {\n  ...DropzoneAreaBase.propTypes,\n  /** Sets whether the dialog is open or closed. */\n  open: PropTypes.bool,\n  /** The Dialog title. */\n  dialogTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  /**\n   * Props to pass to the Material-UI Dialog components.\n   * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\n   */\n  dialogProps: PropTypes.object,\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.<br/>\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.string,\n  /** Cancel button text in dialog. */\n  cancelButtonText: PropTypes.string,\n  /** Submit button text in dialog. */\n  submitButtonText: PropTypes.string,\n  /**\n   * Fired when the modal is closed.\n   *\n   * @param {SyntheticEvent} event The react `SyntheticEvent`\n   */\n  onClose: PropTypes.func,\n  /**\n   * Fired when the user clicks the Submit button.\n   *\n   * @param {SyntheticEvent} event The react `SyntheticEvent`\n   */\n  onSave: PropTypes.func,\n  /**\n   * Shows previews **BELOW** the dropzone.<br/>\n   * **Note:** By default previews show up under in the Dialog and inside in the standalone.\n   */\n  showPreviews: PropTypes.bool,\n  /** Shows preview **INSIDE** the dropzone area. */\n  showPreviewsInDropzone: PropTypes.bool,\n  /** Shows file name under the image. */\n  showFileNamesInPreview: PropTypes.bool,\n};\n\nexport default DropzoneDialogBase;\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {createFileFromUrl, readFile} from '../helpers';\n\nimport DropzoneDialogBase from './DropzoneDialogBase';\n\n\n/**\n * This component provides an uncontrolled version of the DropzoneDialogBase component.\n *\n * It supports all the Props and Methods from `DropzoneDialogBase` but keeps the files state internally.\n *\n * **Note** The `onSave` handler also returns `File[]` with all the accepted files.\n */\nclass DropzoneDialog extends React.PureComponent {\n    state = {\n        fileObjects: [],\n    }\n\n    componentDidMount() {\n        this.loadInitialFiles();\n    }\n\n    componentWillUnmount() {\n        const {clearOnUnmount} = this.props;\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    notifyFileChange = () => {\n        const {onChange} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file));\n        }\n    }\n\n    loadInitialFiles = async() => {\n        const {initialFiles} = this.props;\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            this.setState((state) => ({\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    fileObjs\n                ),\n            }), this.notifyFileChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    addFiles = async(newFileObjects) => {\n        const {filesLimit} = this.props;\n        // Update component state\n        this.setState((state) => {\n            // Handle a single file\n            if (filesLimit <= 1) {\n                return {\n                    fileObjects: [].concat(newFileObjects[0]),\n                };\n            }\n\n            // Handle multiple files\n            return {\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    newFileObjects\n                ),\n            };\n        }, this.notifyFileChange);\n    }\n\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        const {onDelete} = this.props;\n        const {fileObjects} = this.state;\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file);\n        }\n\n        // Update local state\n        this.setState({\n            fileObjects: remainingFileObjs,\n        }, this.notifyFileChange);\n    }\n\n    handleClose = (evt) => {\n        const {clearOnUnmount, onClose} = this.props;\n\n        if (onClose) {\n            onClose(evt);\n        }\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    handleSave = (evt) => {\n        const {clearOnUnmount, onSave} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onSave) {\n            onSave(fileObjects.map((fileObject) => fileObject.file), evt);\n        }\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    render() {\n        const {fileObjects} = this.state;\n\n        return (\n            <DropzoneDialogBase\n                {...this.props}\n                fileObjects={fileObjects}\n                onAdd={this.addFiles}\n                onDelete={this.deleteFile}\n                onClose={this.handleClose}\n                onSave={this.handleSave}\n            />\n        );\n    }\n}\n\nDropzoneDialog.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneDialog.propTypes = {\n    ...DropzoneDialogBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {File[]} files All the files currently inside the Dropzone.\n     * @param {SyntheticEvent} event The react `SyntheticEvent`.\n     */\n    onSave: PropTypes.func,\n};\n\nexport default DropzoneDialog;\n"],"names":["isImage","file","type","split","convertBytesToMbsOrKbs","filesize","size","createFileFromUrl","url","fetch","response","blob","data","metadata","filename","replace","pop","File","readFile","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","abort","readAsDataURL","styles","palette","shape","spacing","root","imageContainer","position","zIndex","textAlign","opacity","image","height","width","maxWidth","color","text","primary","transition","boxSizing","boxShadow","borderRadius","removeButton","top","right","React.createElement","PreviewList","fileObjects","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","classes","getPreviewIcon","container","clsx","map","fileObject","i","item","name","propTypes","PropTypes","object","isRequired","arrayOf","func","bool","withStyles","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","theme","successAlert","backgroundColor","main","errorAlert","infoAlert","warningAlert","message","display","alignItems","marginRight","icon","fontSize","closeButton","SnackbarContentWrapper","props","className","onClose","variant","other","Icon","string","node","oneOf","backgroundPosition","minHeight","background","paper","border","borderColor","divider","cursor","overflow","active","animation","backgroundImage","backgroundSize","light","invalid","dark","textContainer","marginBottom","marginTop","defaultSnackbarAnchorOrigin","horizontal","vertical","defaultGetPreviewIcon","DropzoneAreaBase","state","openSnackBar","snackbarMessage","snackbarVariant","handleDropAccepted","acceptedFiles","evt","filesLimit","getFileAddedMessage","getFileLimitExceedMessage","onAdd","onDrop","length","setState","notifyAlert","all","fileObjs","reduce","msg","fileObj","handleDropRejected","rejectedFiles","getDropRejectMessage","maxFileSize","onDropRejected","forEach","rejectedFile","fileIndex","stopPropagation","getFileRemovedMessage","onDelete","removedFileObj","handleCloseSnackbar","onAlert","alertSnackbarProps","disableRejectionFeedback","dropzoneClass","dropzoneParagraphClass","dropzoneProps","dropzoneText","inputProps","previewText","showAlerts","showFileNamesInPreview","showPreviews","showPreviewsInDropzone","acceptFiles","join","isMultiple","previewsVisible","previewsInDropzoneVisible","Fragment","getRootProps","getInputProps","isDragActive","isDragReject","Array","isArray","includes","React","defaultProps","anchorOrigin","autoHideDuration","fileName","FileObjectShape","any","number","elementType","oneOfType","splitDropzoneAreaProps","clearOnUnmount","initialFiles","onChange","dropzoneAreaProps","DropzoneArea","notifyFileChange","loadInitialFiles","initialFile","concat","console","log","addFiles","newFileObjects","deleteFile","removedFileObjIdx","remainingFileObjs","filter","splitDropzoneDialogProps","allProps","cancelButtonText","dialogProps","dialogTitle","fullWidth","onSave","open","submitButtonText","DropzoneDialogBase","dropzoneDialogProps","submitDisabled","element","DropzoneDialog","handleClose","handleSave"],"mappings":"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"}